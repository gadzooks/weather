-unless @weather.make_actual_call
  .row
    .col-12.center
      .h3
        FAKE results (for testing only)

- if found_api_errors?(@weather.make_actual_call, @forecast_summary)
  %span
    %a{href: "#api-errors"}
      = "Found #{@forecast_summary.errors.size} errors"
      &darr;
-unless @forecast_summary.blank?
  .row
    .center
      = render 'weather_summary_table', forecast_summary: @forecast_summary, by_region: @by_region

  -unless @forecast_summary.forecasts.blank?
    .row
      .col-xs-0.col-lg-2
      .col-xs-12.col-lg-8
        -@forecast_summary.forecasts.each do |loc, detail|
          = render partial: 'forecast_details',
            locals: { loc: loc, detail: detail, daily_times: @forecast_summary.daily_times  }
      .col-xs-0.col-lg-2
  -if @forecast_summary.respond_to?(:alerts)
    .row
      .col-sm-12.col-xs-12.col-lg-12
        = render partial: 'alert', locals: { alerts: @forecast_summary.alerts }

- if @weather.make_actual_call
  - unless @forecast_summary.errors.blank?
    %a{name: 'api-errors'}
    %a{href: '#top'}
      Top
    %table.table.table-striped.table-sm.table-hover
      %thead.thead-dark
        %tr
          %th
            Location
          %th
            Code
          %th
            Details

      %tbody
        - @forecast_summary.errors.keys.sort_by {|l| l.name }.each do |location|
          - details = @forecast_summary.errors[location]
          %tr{scope: :row}
            %td=location.description
            %td=details['code']
            %td=details['error']
